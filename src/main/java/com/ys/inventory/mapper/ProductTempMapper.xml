<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ys.inventory.mapper.ProductTempMapper">
    <resultMap id="BaseResultMap" type="com.ys.inventory.entity.ProductTemp">
        <id column="product_temp_id" jdbcType="VARCHAR" property="productTempId"/>
        <result column="product_temp_name" jdbcType="VARCHAR" property="productTempName"/>
        <result column="product_temp_describe" jdbcType="VARCHAR" property="productTempDescribe"/>
        <result column="create_time" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <collection property="productTempMaterialList" ofType="com.ys.inventory.entity.ProductTempMaterial">
            <id column="product_temp_material_id" jdbcType="VARCHAR" property="productTempMaterialId"/>
            <result column="ptm_product_temp_id" jdbcType="VARCHAR" property="productTempId"/>
            <result column="material_id" jdbcType="VARCHAR" property="materialId"/>
            <result column="material_num" jdbcType="INTEGER" property="materialNum"/>
            <result column="material_name" jdbcType="VARCHAR" property="materialName"/>
            <result column="pt_order" jdbcType="VARCHAR" property="ptOrder"/>
        </collection>
    </resultMap>

    <insert id="insert" parameterType="ProductTemp">
    insert into product_temp (
      product_temp_id,
      product_temp_name,
      product_temp_describe,
      create_time,
      create_user,
      update_time,
      update_user,
      delete_flag
      ) values (
      #{productTempId},
      #{productTempName},
      #{productTempDescribe},
      now(),
      #{createUser},
      now(),
      #{createUser},
      '0'
      )
  </insert>
    <update id="updateProductTemp" parameterType="ProductTemp">
        update product_temp
        <set>
            <if test="productTempName != null">
                product_temp_name=#{productTempName},
            </if>
            <if test="productTempDescribe != null">
                product_temp_describe=#{productTempDescribe},
            </if>
            update_time = now(),
            update_user = #{updateUser}
        </set>
        where product_temp_id = #{productTempId}
    </update>
    <select id="get" parameterType="String" resultMap="BaseResultMap">
        SELECT
        pt.product_temp_id,
        pt.product_temp_name,
        pt.product_temp_describe,
        pt.create_time,
        pt.create_user,
        pt.update_time,
        pt.update_user,
        ptm.material_id,
        ptm.material_num,
        ptm.product_temp_id AS ptm_product_temp_id,
        ptm.product_temp_material_id,
        ptm.pt_order,
        m.material_name,
        u.user_name
    FROM
        product_temp pt
        LEFT JOIN product_temp_material ptm ON pt.product_temp_id = ptm.product_temp_id
        LEFT JOIN material m ON ptm.material_id = m.material_id
        LEFT JOIN user u ON pt.create_user = u.user_id
    WHERE
        pt.product_temp_id = #{productTempId,jdbcType=VARCHAR}
    ORDER BY ptm.pt_order ASC
  </select>

    <select id="getProductTempByName" parameterType="String" resultType="ProductTemp">
        select
        product_temp_id,
        product_temp_name,
        product_temp_describe,
        create_time,
        create_user,
        update_time
        from product_temp
        where
        <if test="productTempId == null">
            product_temp_name = #{productTempName} and delete_flag = '0'
        </if>
        <if test="productTempId != null">
            product_temp_name = #{productTempName} and product_temp_id !=#{productTempId} and delete_flag = '0'
        </if>
    </select>

    <select id="find" resultType="ProductTemp">
        select product_temp_id, product_temp_name, product_temp_describe, create_time, create_user,
        update_time
        from product_temp
        WHERE delete_flag = '0'
        <if test="productTempName !=null">
            and product_temp_name like concat('%', #{productTempName},'%')
        </if>
        order by create_time desc
    </select>

    <update id="delete" parameterType="map">
        update product_temp
        set delete_flag = '1',
        update_time = now(),
        update_user = #{updateUser}
        where
        delete_flag = '0'
        and product_temp_id = #{productTempId}
    </update>
</mapper>